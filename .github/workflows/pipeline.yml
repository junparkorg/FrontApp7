
name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
      id-token: write
      contents: read

jobs:
  ApiBuild:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setting up build version
      run: |
        $dateInfo = Get-Date -Format "yyyy.MM.dd"
        $version = (-join($($dateInfo),"-",$($Env:GITHUB_RUN_NUMBER)))
        echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./ApiApp
    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        login-server: ${{ secrets.ACR_REGISTRY_URL }}
    - name: Publish
      run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=DefaultContainer
      working-directory: ./ApiApp

  FrontBuild:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setting up build version
      run: |
        $dateInfo = Get-Date -Format "yyyy.MM.dd"
        $version = (-join($($dateInfo),"-",$($Env:GITHUB_RUN_NUMBER)))
        echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./FrontApp
    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        login-server: ${{ secrets.ACR_REGISTRY_URL }}
    - name: Publish
      run: dotnet publish --os linux --arch x64 --configuration Release -p:PublishProfile=DefaultContainer
      working-directory: ./FrontApp

  Deploy:
    runs-on: windows-latest
    needs: [ApiBuild,FrontBuild]
    steps:
    - uses: actions/checkout@v3
    - name: Setting up Yaml version
      run: |
        $dateInfo = Get-Date -Format "yyyy.MM.dd"
        $version = (-join($($dateInfo),"-",$($Env:GITHUB_RUN_NUMBER)))
        ((Get-Content -path ./AKS/deploy.yaml -Raw) -replace '##API_IMG##',"${{ secrets.ACR_REGISTRY_URL }}/api-7:$($version)") | 
        Set-Content -Path ./AKS/deploy.yaml  
        ((Get-Content -path ./AKS/deploy.yaml -Raw) -replace '##WEB_IMG##',"${{ secrets.ACR_REGISTRY_URL }}/front-7:$($version)") | 
        Set-Content -Path ./AKS/deploy.yaml  
        (Get-Content -path ./AKS/deploy.yaml -Raw) | ForEach-Object {$_ -replace '"',''} | Out-File ./AKS/deploy.yaml  
        
    - run: mkdir -p path/to/artifact
    - run: copy ./AKS/deploy.yaml path/to/artifact/world.txt
    - uses: actions/upload-artifact@v3
      with:
        name: yamlfile
        path: path/to/artifact/world.txt

    - name: OIDC Login to Azure Public Cloud with AzPowershell (enableAzPSSession true)
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
        enable-AzPSSession: true
    - name: Deploy to AKS 
      run: |
        kubectl apply -f ./AKS/deploy.yaml