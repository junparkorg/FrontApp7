apiVersion: apps/v1
kind: Deployment
metadata:
  name: apiapp7
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apiapp7
  template: 
    metadata: 
      labels: 
         app: apiapp7
      annotations:
         prometheus.io/scrape: 'true'
         prometheus.io/port: '80'
    spec: 
      containers: 
      - name: apiapp7
        image: "##API_IMG##"
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /WeatherForecast
            port: 80
            scheme: HTTP 
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: apiapp7
spec:
  ports:
  - port: 80
  selector:
    app: apiapp7
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webfront7
spec:
  replicas: 2
  selector:
    matchLabels:
      app: webfront7
  template:
    metadata:
      labels:
        app: webfront7
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '80'
    spec:
      containers:
      - name: webfront7
        image: "##WEB_IMG##"
        resources:
           requests:
             cpu: 50m
           limits:
             cpu: 100m
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: webfront7
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: webfront7
